OOP Principles

Polymorphism allows us to perform different tasks with the same entity(methods, operators)
super() - is used in subclass to access superclass members like methods, attributes, construstors 

Encapsulation bundling fields and methods together inside a class
public
private
protected

Overload
methods with the same name but with different number of parameters or different types of parameters
used to increase readability of program
prevents to writing different methods for the same functionality

Abstract class and method
Abstract method doesn't have body
Abstraction is used to hide unnecessary details and show the needed information  
Abstract class cannot create objects

Interface like abstract classes doesn't have implemetation
It consists of only abstract methods
It may have default method with implementation, it used when something is general
Interface can extend other interfaces

Static
-to access class members without creating an instance of the class


